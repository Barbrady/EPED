#BlueJ class context
comment0.params=
comment0.target=EjerciciosPilas()
comment0.text=\n\ Constructor\ for\ objects\ of\ class\ EjerciciosPilas\n
comment1.params=p
comment1.target=int\ elementosPila(Biblioteca.Pilas.StackIF)
comment1.text=\n\ I.\ Longitud\ de\ una\ pila\n\ Dise\u00F1e\ una\ funci\u00F3n\ que\ calcule\ el\ n\u00FAmero\ de\ elementos\ que\ contiene\ una\ pila\n
comment10.params=p\ o
comment10.target=Biblioteca.Pilas.StackIF\ prefijo(Biblioteca.Pilas.StackIF,\ java.lang.Object)
comment10.text=\n\ X.\ Dise\u00F1e\ una\ funci\u00F3n\ que\ devuela\ una\ pila\ con\ los\ elementos\ que\ preceden\ a\ un\ elemento\ dado\n
comment11.params=p\ o
comment11.target=Biblioteca.Pilas.StackIF\ sufijo(Biblioteca.Pilas.StackIF,\ java.lang.Object)
comment11.text=\n\ XI.\ Dise\u00F1e\ una\ funci\u00F3n\ que\ devuelva\ la\ pila\ conlos\ elementos\ que\ suceden\ a\ un\ elemento\ dado\n
comment12.params=p\ o\ l
comment12.target=Biblioteca.Pilas.StackIF\ mayores(Biblioteca.Pilas.StackIF,\ java.lang.Integer,\ Biblioteca.Listas.ListIF)
comment12.text=\n\ XII.\ Dise\u00F1e\ una\ funci\u00F3n\ recursiva\ que\ devuelva\ una\ pila\ con\ todos\ los\ elemtnos\ mayores\ a\ uno\ dado\n
comment2.params=p\ l
comment2.target=Biblioteca.Listas.ListIF\ pasarLista(Biblioteca.Pilas.StackIF,\ Biblioteca.Listas.ListIF)
comment2.text=\n\ II.\ Pasar\ a\ lista\n\ Devolver\ una\ lista\ con\ los\ elementos\ de\ una\ pila\ seg\u00FAn\ aparecen\ en\ \u00E9sta\ desde\ la\ cima\ hasta\ la\ base\n
comment3.params=p\ l
comment3.target=boolean\ esSubpila(Biblioteca.Pilas.StackIF,\ Biblioteca.Listas.ListIF)
comment3.text=\n\ III.\ Subpila\n\ Dise\u00F1e\ una\ funci\u00F3n\ que\ dada\ una\ lista\ determine\ si\ \u00E9sta\ est\u00E1\ contenida\ en\ una\ pila\ como\ subpila\n
comment4.params=p
comment4.target=java.lang.Object\ elementoBase(Biblioteca.Pilas.StackIF)
comment4.text=\n\ IV.\ Elemento\ base\n\ Dise\u00F1e\ una\ funci\u00F3n\ que\ devuelva\ el\ elemento\ base\ de\ una\ pila\n
comment5.params=p\ o
comment5.target=Biblioteca.Pilas.StackIF\ inserBase(Biblioteca.Pilas.StackIF,\ java.lang.Object)
comment5.text=\n\ V.\ Insertar\ en\ la\ base\n\ Dise\u00F1e\ una\ funci\u00F3n\ que\ inserte\ un\ dato\ como\ elemento\ en\ la\ base\ de\ una\ pila\n
comment6.params=p1\ p2
comment6.target=Biblioteca.Pilas.StackIF\ concatenar(Biblioteca.Pilas.StackIF,\ Biblioteca.Pilas.StackIF)
comment6.text=\n\ VI.\ Concatenar\ dos\ pilas\n\ Dise\u00F1e\ una\ funci\u00F3n\ recursiva\ que\ devuelva\ la\ pila\ resultante\ de\ concatenar\ dos\ pilas\n
comment7.params=p1\ p2
comment7.target=Biblioteca.Pilas.StackIF\ invertir(Biblioteca.Pilas.StackIF,\ Biblioteca.Pilas.StackIF)
comment7.text=\n\ VII.\ Dise\u00F1e\ una\ funci\u00F3n\ recursiva\ que\ devuelva\ una\ pila\ con\ los\ elementos\ colocados\ de\ forma\ inversa\ a\ otra\n
comment8.params=p\ o
comment8.target=Biblioteca.Pilas.StackIF\ erase(Biblioteca.Pilas.StackIF,\ java.lang.Object)
comment8.text=\n\ VIII.\ Dise\u00F1e\ una\ funci\u00F3n\ que\ devuelva\ una\ pila\ que\ elimine\ la\ primera\ aparici\u00F3n\ de\ un\ elemento\n
comment9.params=p\ o
comment9.target=Biblioteca.Pilas.StackIF\ eraseAll(Biblioteca.Pilas.StackIF,\ java.lang.Object)
comment9.text=\n\ IX.\ Dise\u00F1e\ una\ funci\u00F3n\ que\ devuelva\ una\ pila\ donde\ se\ hayan\ eliminado\ todas\ las\ apariciones\ de\ un\ elemento\n
numComments=13
